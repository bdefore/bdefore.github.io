import com.kelvinluck.flickr.*;import net.hiddenresource.util.Debug;var holder = _root.contentMC;var trg = ssp;var _flickr:Flickr = Flickr.getFlickr();sspLis = new sspResponseListener(_root.ssp);_flickr.apiKey = "7f0ef5320c47a765408fcb56d6e72845"; // replace with your flickr api keyfunction findUser() {	page = 1; // set initial page back to 1	var entry = inputField.text;	if(entry.indexOf("@") > -1) {		Debug.trace('Finding user ' + inputField.text + ' by email.');		_flickr.peopleFindByEmail(entry);	}	else {		Debug.trace('Finding user ' + inputField.text + ' by username.');		_flickr.peopleFindByUsername(entry);		sspLis.initSSP("nada");	}	ssp.xmlFilePath = sspLis.phpFile + sspLis.extraParams;} var submitListener = new Object();submitListener.click = findUser;submit_btn.addEventListener("click",submitListener);var depthCounter = 101;var thumbW = 75;var thumbH = 75;var startX = 15;var startY = 40;var columns = 5;var padding = 5;var per_page = columns*5;var page = 1;var containerX;var containerY; // i have these since i want to double the size of the container when an image is clicked, but since the counter in the displayphotos (i) is  a local var it doesn't persist the count of the images which is necessary ... oh wait!@var currReq; // for storing photo calls, this allows us to paginate easily on a previous callvar keepWindow = false; // used to preserve window... there must be a better way to do this/*// FULL BROWSER FLASH CODEstageListener = new Object();Stage.addListener(stageListener);stageListener.onResize = recenter;function recenter(){	var stageXCenter = Stage.width * .5; 	var stageYCenter = Stage.height * .5;		// Offset the center point with half of 	// of the clip width and height, plus 	// the minimum internal x and y bounds 	var b=contentMC.getBounds();		stageXCenter = Math.floor(stageXCenter - ((b.xMin + contentMC._width) * .5)); 	stageYCenter = Math.floor(stageYCenter - ((b.yMin + contentMC._height) * .5));		var newScale = (Stage.width*100/contentMC.newWidth) - 15;//	_root.ns.text = String(newScale);//	Debug.trace('ns: ' + newScale); 		// place the clip with the offset 	contentMC.tween("_x",stageXCenter,2); 	contentMC.tween("_y",stageYCenter,3);//	contentMC.tween("_xscale",newScale,3);//	contentMC.tween("_yscale",newScale,3);//	contentMC.tween("_height",Stage.width,3);}Stage.scaleMode = "noScale";*/